/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-11-17 18:43:33 UTC)
 * on 2014-12-09 at 08:48:39 UTC 
 * Modify at your own risk.
 */

package com.appspot.ruby_mine.rubymine;

/**
 * Service definition for Rubymine (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link RubymineRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Rubymine extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the rubymine library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://ruby-mine.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "rubymine/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Rubymine(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Rubymine(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Coupons collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Coupons.List request = rubymine.coupons().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Coupons coupons() {
    return new Coupons();
  }

  /**
   * The "coupons" collection of methods.
   */
  public class Coupons {

    /**
     * Create a request for the method "coupons.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.CouponCol> {

      private static final String REST_PATH = "coupon/all";

      /**
       * Create a request for the method "coupons.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.CouponCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "coupons.delete".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends RubymineRequest<Void> {

      private static final String REST_PATH = "coupon";

      /**
       * Create a request for the method "coupons.delete".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(Rubymine.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "coupons.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Coupon}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.Coupon content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Coupon> {

      private static final String REST_PATH = "coupon";

      /**
       * Create a request for the method "coupons.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Coupon}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.Coupon content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Coupon.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "coupons.list".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param userId
     * @return the request
     */
    public List list(java.lang.Long userId) throws java.io.IOException {
      List result = new List(userId);
      initialize(result);
      return result;
    }

    public class List extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.CouponCol> {

      private static final String REST_PATH = "coupons";

      /**
       * Create a request for the method "coupons.list".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param userId
       * @since 1.13
       */
      protected List(java.lang.Long userId) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.CouponCol.class);
        this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long userId;

      /**

       */
      public java.lang.Long getUserId() {
        return userId;
      }

      public List setUserId(java.lang.Long userId) {
        this.userId = userId;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "coupons.redeem".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Redeem#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Coupon}
     * @return the request
     */
    public Redeem redeem(com.appspot.ruby_mine.rubymine.model.Coupon content) throws java.io.IOException {
      Redeem result = new Redeem(content);
      initialize(result);
      return result;
    }

    public class Redeem extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

      private static final String REST_PATH = "coupon/redeem";

      /**
       * Create a request for the method "coupons.redeem".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Redeem#execute()} method to invoke the remote operation.
       * <p> {@link
       * Redeem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Coupon}
       * @since 1.13
       */
      protected Redeem(com.appspot.ruby_mine.rubymine.model.Coupon content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
      }

      @Override
      public Redeem setAlt(java.lang.String alt) {
        return (Redeem) super.setAlt(alt);
      }

      @Override
      public Redeem setFields(java.lang.String fields) {
        return (Redeem) super.setFields(fields);
      }

      @Override
      public Redeem setKey(java.lang.String key) {
        return (Redeem) super.setKey(key);
      }

      @Override
      public Redeem setOauthToken(java.lang.String oauthToken) {
        return (Redeem) super.setOauthToken(oauthToken);
      }

      @Override
      public Redeem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Redeem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Redeem setQuotaUser(java.lang.String quotaUser) {
        return (Redeem) super.setQuotaUser(quotaUser);
      }

      @Override
      public Redeem setUserIp(java.lang.String userIp) {
        return (Redeem) super.setUserIp(userIp);
      }

      @Override
      public Redeem set(String parameterName, Object value) {
        return (Redeem) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "coupons.use".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Use#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Coupon}
     * @return the request
     */
    public Use use(com.appspot.ruby_mine.rubymine.model.Coupon content) throws java.io.IOException {
      Use result = new Use(content);
      initialize(result);
      return result;
    }

    public class Use extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Coupon> {

      private static final String REST_PATH = "coupon/use";

      /**
       * Create a request for the method "coupons.use".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Use#execute()} method to invoke the remote operation. <p>
       * {@link Use#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Coupon}
       * @since 1.13
       */
      protected Use(com.appspot.ruby_mine.rubymine.model.Coupon content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Coupon.class);
      }

      @Override
      public Use setAlt(java.lang.String alt) {
        return (Use) super.setAlt(alt);
      }

      @Override
      public Use setFields(java.lang.String fields) {
        return (Use) super.setFields(fields);
      }

      @Override
      public Use setKey(java.lang.String key) {
        return (Use) super.setKey(key);
      }

      @Override
      public Use setOauthToken(java.lang.String oauthToken) {
        return (Use) super.setOauthToken(oauthToken);
      }

      @Override
      public Use setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Use) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Use setQuotaUser(java.lang.String quotaUser) {
        return (Use) super.setQuotaUser(quotaUser);
      }

      @Override
      public Use setUserIp(java.lang.String userIp) {
        return (Use) super.setUserIp(userIp);
      }

      @Override
      public Use set(String parameterName, Object value) {
        return (Use) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Gems collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Gems.List request = rubymine.gems().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Gems gems() {
    return new Gems();
  }

  /**
   * The "gems" collection of methods.
   */
  public class Gems {

    /**
     * Create a request for the method "gems.aall".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Aall#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Aall aall() throws java.io.IOException {
      Aall result = new Aall();
      initialize(result);
      return result;
    }

    public class Aall extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.GemCol> {

      private static final String REST_PATH = "gem/all";

      /**
       * Create a request for the method "gems.aall".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Aall#execute()} method to invoke the remote operation. <p>
       * {@link Aall#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Aall() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.GemCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Aall setAlt(java.lang.String alt) {
        return (Aall) super.setAlt(alt);
      }

      @Override
      public Aall setFields(java.lang.String fields) {
        return (Aall) super.setFields(fields);
      }

      @Override
      public Aall setKey(java.lang.String key) {
        return (Aall) super.setKey(key);
      }

      @Override
      public Aall setOauthToken(java.lang.String oauthToken) {
        return (Aall) super.setOauthToken(oauthToken);
      }

      @Override
      public Aall setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Aall) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Aall setQuotaUser(java.lang.String quotaUser) {
        return (Aall) super.setQuotaUser(quotaUser);
      }

      @Override
      public Aall setUserIp(java.lang.String userIp) {
        return (Aall) super.setUserIp(userIp);
      }

      @Override
      public Aall set(String parameterName, Object value) {
        return (Aall) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gems.delete".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends RubymineRequest<Void> {

      private static final String REST_PATH = "gem";

      /**
       * Create a request for the method "gems.delete".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(Rubymine.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gems.edit".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Edit#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Gem}
     * @return the request
     */
    public Edit edit(com.appspot.ruby_mine.rubymine.model.Gem content) throws java.io.IOException {
      Edit result = new Edit(content);
      initialize(result);
      return result;
    }

    public class Edit extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Gem> {

      private static final String REST_PATH = "gem";

      /**
       * Create a request for the method "gems.edit".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Edit#execute()} method to invoke the remote operation. <p>
       * {@link Edit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Gem}
       * @since 1.13
       */
      protected Edit(com.appspot.ruby_mine.rubymine.model.Gem content) {
        super(Rubymine.this, "PUT", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Gem.class);
      }

      @Override
      public Edit setAlt(java.lang.String alt) {
        return (Edit) super.setAlt(alt);
      }

      @Override
      public Edit setFields(java.lang.String fields) {
        return (Edit) super.setFields(fields);
      }

      @Override
      public Edit setKey(java.lang.String key) {
        return (Edit) super.setKey(key);
      }

      @Override
      public Edit setOauthToken(java.lang.String oauthToken) {
        return (Edit) super.setOauthToken(oauthToken);
      }

      @Override
      public Edit setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Edit) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Edit setQuotaUser(java.lang.String quotaUser) {
        return (Edit) super.setQuotaUser(quotaUser);
      }

      @Override
      public Edit setUserIp(java.lang.String userIp) {
        return (Edit) super.setUserIp(userIp);
      }

      @Override
      public Edit set(String parameterName, Object value) {
        return (Edit) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "gems.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Gem}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.Gem content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Gem> {

      private static final String REST_PATH = "gem";

      /**
       * Create a request for the method "gems.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Gem}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.Gem content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Gem.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the List collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Rubymine rubymine = new Rubymine(...);}
     *   {@code Rubymine.List.List request = rubymine.list().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public List list() {
      return new List();
    }

    /**
     * The "list" collection of methods.
     */
    public class List {

      /**
       * Create a request for the method "list.mine".
       *
       * This request holds the parameters needed by the rubymine server.  After setting any optional
       * parameters, call the {@link Mine#execute()} method to invoke the remote operation.
       *
       * @param rubymineId
       * @return the request
       */
      public Mine mine(java.lang.Long rubymineId) throws java.io.IOException {
        Mine result = new Mine(rubymineId);
        initialize(result);
        return result;
      }

      public class Mine extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.GemCol> {

        private static final String REST_PATH = "gems/mine";

        /**
         * Create a request for the method "list.mine".
         *
         * This request holds the parameters needed by the the rubymine server.  After setting any
         * optional parameters, call the {@link Mine#execute()} method to invoke the remote operation. <p>
         * {@link Mine#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param rubymineId
         * @since 1.13
         */
        protected Mine(java.lang.Long rubymineId) {
          super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.GemCol.class);
          this.rubymineId = com.google.api.client.util.Preconditions.checkNotNull(rubymineId, "Required parameter rubymineId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Mine setAlt(java.lang.String alt) {
          return (Mine) super.setAlt(alt);
        }

        @Override
        public Mine setFields(java.lang.String fields) {
          return (Mine) super.setFields(fields);
        }

        @Override
        public Mine setKey(java.lang.String key) {
          return (Mine) super.setKey(key);
        }

        @Override
        public Mine setOauthToken(java.lang.String oauthToken) {
          return (Mine) super.setOauthToken(oauthToken);
        }

        @Override
        public Mine setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Mine) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Mine setQuotaUser(java.lang.String quotaUser) {
          return (Mine) super.setQuotaUser(quotaUser);
        }

        @Override
        public Mine setUserIp(java.lang.String userIp) {
          return (Mine) super.setUserIp(userIp);
        }

        @com.google.api.client.util.Key
        private java.lang.Long rubymineId;

        /**

         */
        public java.lang.Long getRubymineId() {
          return rubymineId;
        }

        public Mine setRubymineId(java.lang.Long rubymineId) {
          this.rubymineId = rubymineId;
          return this;
        }

        @Override
        public Mine set(String parameterName, Object value) {
          return (Mine) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "list.zone".
       *
       * This request holds the parameters needed by the rubymine server.  After setting any optional
       * parameters, call the {@link Zone#execute()} method to invoke the remote operation.
       *
       * @param rubyzoneId
       * @return the request
       */
      public Zone zone(java.lang.Long rubyzoneId) throws java.io.IOException {
        Zone result = new Zone(rubyzoneId);
        initialize(result);
        return result;
      }

      public class Zone extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.GemCol> {

        private static final String REST_PATH = "gems/zone";

        /**
         * Create a request for the method "list.zone".
         *
         * This request holds the parameters needed by the the rubymine server.  After setting any
         * optional parameters, call the {@link Zone#execute()} method to invoke the remote operation. <p>
         * {@link Zone#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param rubyzoneId
         * @since 1.13
         */
        protected Zone(java.lang.Long rubyzoneId) {
          super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.GemCol.class);
          this.rubyzoneId = com.google.api.client.util.Preconditions.checkNotNull(rubyzoneId, "Required parameter rubyzoneId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Zone setAlt(java.lang.String alt) {
          return (Zone) super.setAlt(alt);
        }

        @Override
        public Zone setFields(java.lang.String fields) {
          return (Zone) super.setFields(fields);
        }

        @Override
        public Zone setKey(java.lang.String key) {
          return (Zone) super.setKey(key);
        }

        @Override
        public Zone setOauthToken(java.lang.String oauthToken) {
          return (Zone) super.setOauthToken(oauthToken);
        }

        @Override
        public Zone setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Zone) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Zone setQuotaUser(java.lang.String quotaUser) {
          return (Zone) super.setQuotaUser(quotaUser);
        }

        @Override
        public Zone setUserIp(java.lang.String userIp) {
          return (Zone) super.setUserIp(userIp);
        }

        @com.google.api.client.util.Key
        private java.lang.Long rubyzoneId;

        /**

         */
        public java.lang.Long getRubyzoneId() {
          return rubyzoneId;
        }

        public Zone setRubyzoneId(java.lang.Long rubyzoneId) {
          this.rubyzoneId = rubyzoneId;
          return this;
        }

        @Override
        public Zone set(String parameterName, Object value) {
          return (Zone) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Logs collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Logs.List request = rubymine.logs().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Logs logs() {
    return new Logs();
  }

  /**
   * The "logs" collection of methods.
   */
  public class Logs {

    /**
     * Create a request for the method "logs.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.LogCol> {

      private static final String REST_PATH = "log/all";

      /**
       * Create a request for the method "logs.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.LogCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "logs.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Log}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.Log content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<Void> {

      private static final String REST_PATH = "log";

      /**
       * Create a request for the method "logs.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Log}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.Log content) {
        super(Rubymine.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "logs.list".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param after
     * @return the request
     */
    public List list(java.lang.Long after) throws java.io.IOException {
      List result = new List(after);
      initialize(result);
      return result;
    }

    public class List extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.LogCol> {

      private static final String REST_PATH = "logs";

      /**
       * Create a request for the method "logs.list".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param after
       * @since 1.13
       */
      protected List(java.lang.Long after) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.LogCol.class);
        this.after = com.google.api.client.util.Preconditions.checkNotNull(after, "Required parameter after must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long after;

      /**

       */
      public java.lang.Long getAfter() {
        return after;
      }

      public List setAfter(java.lang.Long after) {
        this.after = after;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Mineinfos collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Mineinfos.List request = rubymine.mineinfos().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Mineinfos mineinfos() {
    return new Mineinfos();
  }

  /**
   * The "mineinfos" collection of methods.
   */
  public class Mineinfos {

    /**
     * Create a request for the method "mineinfos.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.MineInfoCol> {

      private static final String REST_PATH = "mineInfo/all";

      /**
       * Create a request for the method "mineinfos.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.MineInfoCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "mineinfos.get".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Get get(java.lang.Long id) throws java.io.IOException {
      Get result = new Get(id);
      initialize(result);
      return result;
    }

    public class Get extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.MineInfo> {

      private static final String REST_PATH = "mineinfo";

      /**
       * Create a request for the method "mineinfos.get".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Get(java.lang.Long id) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.MineInfo.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Get setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "mineinfos.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.MineInfo}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.MineInfo content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.MineInfo> {

      private static final String REST_PATH = "mineinfo";

      /**
       * Create a request for the method "mineinfos.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.MineInfo}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.MineInfo content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.MineInfo.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "mineinfos.patch".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.MineInfo}
     * @return the request
     */
    public Patch patch(java.lang.Long id, com.appspot.ruby_mine.rubymine.model.MineInfo content) throws java.io.IOException {
      Patch result = new Patch(id, content);
      initialize(result);
      return result;
    }

    public class Patch extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.MineInfo> {

      private static final String REST_PATH = "mineinfo";

      /**
       * Create a request for the method "mineinfos.patch".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.MineInfo}
       * @since 1.13
       */
      protected Patch(java.lang.Long id, com.appspot.ruby_mine.rubymine.model.MineInfo content) {
        super(Rubymine.this, "PATCH", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.MineInfo.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Patch setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "mineinfos.update".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.MineInfo}
     * @return the request
     */
    public Update update(com.appspot.ruby_mine.rubymine.model.MineInfo content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.MineInfo> {

      private static final String REST_PATH = "mineinfo";

      /**
       * Create a request for the method "mineinfos.update".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.MineInfo}
       * @since 1.13
       */
      protected Update(com.appspot.ruby_mine.rubymine.model.MineInfo content) {
        super(Rubymine.this, "PUT", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.MineInfo.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Receipts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Receipts.List request = rubymine.receipts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Receipts receipts() {
    return new Receipts();
  }

  /**
   * The "receipts" collection of methods.
   */
  public class Receipts {

    /**
     * Create a request for the method "receipts.claim".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Claim#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Receipt}
     * @return the request
     */
    public Claim claim(com.appspot.ruby_mine.rubymine.model.Receipt content) throws java.io.IOException {
      Claim result = new Claim(content);
      initialize(result);
      return result;
    }

    public class Claim extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

      private static final String REST_PATH = "receipt/claim";

      /**
       * Create a request for the method "receipts.claim".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Claim#execute()} method to invoke the remote operation.
       * <p> {@link
       * Claim#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Receipt}
       * @since 1.13
       */
      protected Claim(com.appspot.ruby_mine.rubymine.model.Receipt content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
      }

      @Override
      public Claim setAlt(java.lang.String alt) {
        return (Claim) super.setAlt(alt);
      }

      @Override
      public Claim setFields(java.lang.String fields) {
        return (Claim) super.setFields(fields);
      }

      @Override
      public Claim setKey(java.lang.String key) {
        return (Claim) super.setKey(key);
      }

      @Override
      public Claim setOauthToken(java.lang.String oauthToken) {
        return (Claim) super.setOauthToken(oauthToken);
      }

      @Override
      public Claim setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Claim) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Claim setQuotaUser(java.lang.String quotaUser) {
        return (Claim) super.setQuotaUser(quotaUser);
      }

      @Override
      public Claim setUserIp(java.lang.String userIp) {
        return (Claim) super.setUserIp(userIp);
      }

      @Override
      public Claim set(String parameterName, Object value) {
        return (Claim) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Rubies collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Rubies.List request = rubymine.rubies().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Rubies rubies() {
    return new Rubies();
  }

  /**
   * The "rubies" collection of methods.
   */
  public class Rubies {

    /**
     * Create a request for the method "rubies.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.RubyCol> {

      private static final String REST_PATH = "ruby/all";

      /**
       * Create a request for the method "rubies.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.RubyCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubies.claim".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Claim#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.RubyCol}
     * @return the request
     */
    public Claim claim(com.appspot.ruby_mine.rubymine.model.RubyCol content) throws java.io.IOException {
      Claim result = new Claim(content);
      initialize(result);
      return result;
    }

    public class Claim extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

      private static final String REST_PATH = "ruby/claim";

      /**
       * Create a request for the method "rubies.claim".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Claim#execute()} method to invoke the remote operation.
       * <p> {@link
       * Claim#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.RubyCol}
       * @since 1.13
       */
      protected Claim(com.appspot.ruby_mine.rubymine.model.RubyCol content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
      }

      @Override
      public Claim setAlt(java.lang.String alt) {
        return (Claim) super.setAlt(alt);
      }

      @Override
      public Claim setFields(java.lang.String fields) {
        return (Claim) super.setFields(fields);
      }

      @Override
      public Claim setKey(java.lang.String key) {
        return (Claim) super.setKey(key);
      }

      @Override
      public Claim setOauthToken(java.lang.String oauthToken) {
        return (Claim) super.setOauthToken(oauthToken);
      }

      @Override
      public Claim setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Claim) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Claim setQuotaUser(java.lang.String quotaUser) {
        return (Claim) super.setQuotaUser(quotaUser);
      }

      @Override
      public Claim setUserIp(java.lang.String userIp) {
        return (Claim) super.setUserIp(userIp);
      }

      @Override
      public Claim set(String parameterName, Object value) {
        return (Claim) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubies.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Ruby}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.Ruby content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Ruby> {

      private static final String REST_PATH = "ruby";

      /**
       * Create a request for the method "rubies.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Ruby}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.Ruby content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Ruby.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubies.mine".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Mine#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Ruby}
     * @return the request
     */
    public Mine mine(com.appspot.ruby_mine.rubymine.model.Ruby content) throws java.io.IOException {
      Mine result = new Mine(content);
      initialize(result);
      return result;
    }

    public class Mine extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.RubyCol> {

      private static final String REST_PATH = "ruby/mine";

      /**
       * Create a request for the method "rubies.mine".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Mine#execute()} method to invoke the remote operation. <p>
       * {@link Mine#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Ruby}
       * @since 1.13
       */
      protected Mine(com.appspot.ruby_mine.rubymine.model.Ruby content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.RubyCol.class);
      }

      @Override
      public Mine setAlt(java.lang.String alt) {
        return (Mine) super.setAlt(alt);
      }

      @Override
      public Mine setFields(java.lang.String fields) {
        return (Mine) super.setFields(fields);
      }

      @Override
      public Mine setKey(java.lang.String key) {
        return (Mine) super.setKey(key);
      }

      @Override
      public Mine setOauthToken(java.lang.String oauthToken) {
        return (Mine) super.setOauthToken(oauthToken);
      }

      @Override
      public Mine setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Mine) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Mine setQuotaUser(java.lang.String quotaUser) {
        return (Mine) super.setQuotaUser(quotaUser);
      }

      @Override
      public Mine setUserIp(java.lang.String userIp) {
        return (Mine) super.setUserIp(userIp);
      }

      @Override
      public Mine set(String parameterName, Object value) {
        return (Mine) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Rubymines collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Rubymines.List request = rubymine.rubymines().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Rubymines rubymines() {
    return new Rubymines();
  }

  /**
   * The "rubymines" collection of methods.
   */
  public class Rubymines {

    /**
     * Create a request for the method "rubymines.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.RubymineCol> {

      private static final String REST_PATH = "rubymine/all";

      /**
       * Create a request for the method "rubymines.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.RubymineCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubymines.delete".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends RubymineRequest<Void> {

      private static final String REST_PATH = "rubymine";

      /**
       * Create a request for the method "rubymines.delete".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(Rubymine.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubymines.get".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Get get(java.lang.Long id) throws java.io.IOException {
      Get result = new Get(id);
      initialize(result);
      return result;
    }

    public class Get extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Rubymine> {

      private static final String REST_PATH = "rubymine";

      /**
       * Create a request for the method "rubymines.get".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Get(java.lang.Long id) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.Rubymine.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Get setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubymines.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubymine}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.Rubymine content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Rubymine> {

      private static final String REST_PATH = "rubymine";

      /**
       * Create a request for the method "rubymines.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubymine}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.Rubymine content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Rubymine.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubymines.list".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param rubyzoneId
     * @return the request
     */
    public List list(java.lang.Long rubyzoneId) throws java.io.IOException {
      List result = new List(rubyzoneId);
      initialize(result);
      return result;
    }

    public class List extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.RubymineCol> {

      private static final String REST_PATH = "rubymines";

      /**
       * Create a request for the method "rubymines.list".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param rubyzoneId
       * @since 1.13
       */
      protected List(java.lang.Long rubyzoneId) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.RubymineCol.class);
        this.rubyzoneId = com.google.api.client.util.Preconditions.checkNotNull(rubyzoneId, "Required parameter rubyzoneId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long rubyzoneId;

      /**

       */
      public java.lang.Long getRubyzoneId() {
        return rubyzoneId;
      }

      public List setRubyzoneId(java.lang.Long rubyzoneId) {
        this.rubyzoneId = rubyzoneId;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubymines.patch".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubymine}
     * @return the request
     */
    public Patch patch(java.lang.Long id, com.appspot.ruby_mine.rubymine.model.Rubymine content) throws java.io.IOException {
      Patch result = new Patch(id, content);
      initialize(result);
      return result;
    }

    public class Patch extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Rubymine> {

      private static final String REST_PATH = "rubymine";

      /**
       * Create a request for the method "rubymines.patch".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubymine}
       * @since 1.13
       */
      protected Patch(java.lang.Long id, com.appspot.ruby_mine.rubymine.model.Rubymine content) {
        super(Rubymine.this, "PATCH", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Rubymine.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Patch setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubymines.update".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubymine}
     * @return the request
     */
    public Update update(com.appspot.ruby_mine.rubymine.model.Rubymine content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Rubymine> {

      private static final String REST_PATH = "rubymine";

      /**
       * Create a request for the method "rubymines.update".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubymine}
       * @since 1.13
       */
      protected Update(com.appspot.ruby_mine.rubymine.model.Rubymine content) {
        super(Rubymine.this, "PUT", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Rubymine.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Rubyzones collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Rubyzones.List request = rubymine.rubyzones().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Rubyzones rubyzones() {
    return new Rubyzones();
  }

  /**
   * The "rubyzones" collection of methods.
   */
  public class Rubyzones {

    /**
     * Create a request for the method "rubyzones.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.RubyzoneCol> {

      private static final String REST_PATH = "rubyzone/all";

      /**
       * Create a request for the method "rubyzones.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.RubyzoneCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubyzones.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubyzone}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.Rubyzone content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Rubyzone> {

      private static final String REST_PATH = "rubyzone";

      /**
       * Create a request for the method "rubyzones.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Rubyzone}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.Rubyzone content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Rubyzone.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "rubyzones.list".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.RubyzoneCol> {

      private static final String REST_PATH = "rubyzones";

      /**
       * Create a request for the method "rubyzones.list".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.RubyzoneCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Userpairs collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Userpairs.List request = rubymine.userpairs().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Userpairs userpairs() {
    return new Userpairs();
  }

  /**
   * The "userpairs" collection of methods.
   */
  public class Userpairs {

    /**
     * Create a request for the method "userpairs.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.UserpairCol> {

      private static final String REST_PATH = "userpair/all";

      /**
       * Create a request for the method "userpairs.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.UserpairCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "userpairs.delete".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.Long id) throws java.io.IOException {
      Delete result = new Delete(id);
      initialize(result);
      return result;
    }

    public class Delete extends RubymineRequest<Void> {

      private static final String REST_PATH = "userpair";

      /**
       * Create a request for the method "userpairs.delete".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.Long id) {
        super(Rubymine.this, "DELETE", REST_PATH, null, Void.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Delete setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "userpairs.list".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param userId
     * @return the request
     */
    public List list(java.lang.Long userId) throws java.io.IOException {
      List result = new List(userId);
      initialize(result);
      return result;
    }

    public class List extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.UserpairCol> {

      private static final String REST_PATH = "userpairs";

      /**
       * Create a request for the method "userpairs.list".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param userId
       * @since 1.13
       */
      protected List(java.lang.Long userId) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.UserpairCol.class);
        this.userId = com.google.api.client.util.Preconditions.checkNotNull(userId, "Required parameter userId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long userId;

      /**

       */
      public java.lang.Long getUserId() {
        return userId;
      }

      public List setUserId(java.lang.Long userId) {
        this.userId = userId;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "userpairs.pair".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Pair#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Userpair}
     * @return the request
     */
    public Pair pair(com.appspot.ruby_mine.rubymine.model.Userpair content) throws java.io.IOException {
      Pair result = new Pair(content);
      initialize(result);
      return result;
    }

    public class Pair extends RubymineRequest<Void> {

      private static final String REST_PATH = "userpair/pair";

      /**
       * Create a request for the method "userpairs.pair".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Pair#execute()} method to invoke the remote operation. <p>
       * {@link Pair#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Userpair}
       * @since 1.13
       */
      protected Pair(com.appspot.ruby_mine.rubymine.model.Userpair content) {
        super(Rubymine.this, "POST", REST_PATH, content, Void.class);
      }

      @Override
      public Pair setAlt(java.lang.String alt) {
        return (Pair) super.setAlt(alt);
      }

      @Override
      public Pair setFields(java.lang.String fields) {
        return (Pair) super.setFields(fields);
      }

      @Override
      public Pair setKey(java.lang.String key) {
        return (Pair) super.setKey(key);
      }

      @Override
      public Pair setOauthToken(java.lang.String oauthToken) {
        return (Pair) super.setOauthToken(oauthToken);
      }

      @Override
      public Pair setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Pair) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Pair setQuotaUser(java.lang.String quotaUser) {
        return (Pair) super.setQuotaUser(quotaUser);
      }

      @Override
      public Pair setUserIp(java.lang.String userIp) {
        return (Pair) super.setUserIp(userIp);
      }

      @Override
      public Pair set(String parameterName, Object value) {
        return (Pair) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "userpairs.update".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.Userpair}
     * @return the request
     */
    public Update update(com.appspot.ruby_mine.rubymine.model.Userpair content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.Userpair> {

      private static final String REST_PATH = "userpair";

      /**
       * Create a request for the method "userpairs.update".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.Userpair}
       * @since 1.13
       */
      protected Update(com.appspot.ruby_mine.rubymine.model.Userpair content) {
        super(Rubymine.this, "PUT", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.Userpair.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Users collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Rubymine rubymine = new Rubymine(...);}
   *   {@code Rubymine.Users.List request = rubymine.users().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Users users() {
    return new Users();
  }

  /**
   * The "users" collection of methods.
   */
  public class Users {

    /**
     * Create a request for the method "users.all".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link All#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public All all() throws java.io.IOException {
      All result = new All();
      initialize(result);
      return result;
    }

    public class All extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.UserCol> {

      private static final String REST_PATH = "user/all";

      /**
       * Create a request for the method "users.all".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link All#execute()} method to invoke the remote operation. <p>
       * {@link All#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected All() {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.UserCol.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public All setAlt(java.lang.String alt) {
        return (All) super.setAlt(alt);
      }

      @Override
      public All setFields(java.lang.String fields) {
        return (All) super.setFields(fields);
      }

      @Override
      public All setKey(java.lang.String key) {
        return (All) super.setKey(key);
      }

      @Override
      public All setOauthToken(java.lang.String oauthToken) {
        return (All) super.setOauthToken(oauthToken);
      }

      @Override
      public All setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (All) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public All setQuotaUser(java.lang.String quotaUser) {
        return (All) super.setQuotaUser(quotaUser);
      }

      @Override
      public All setUserIp(java.lang.String userIp) {
        return (All) super.setUserIp(userIp);
      }

      @Override
      public All set(String parameterName, Object value) {
        return (All) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.get".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param id
     * @return the request
     */
    public Get get(java.lang.Long id) throws java.io.IOException {
      Get result = new Get(id);
      initialize(result);
      return result;
    }

    public class Get extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

      private static final String REST_PATH = "user";

      /**
       * Create a request for the method "users.get".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @since 1.13
       */
      protected Get(java.lang.Long id) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.User.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Get setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.insert".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
     * @return the request
     */
    public Insert insert(com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
      Insert result = new Insert(content);
      initialize(result);
      return result;
    }

    public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

      private static final String REST_PATH = "user";

      /**
       * Create a request for the method "users.insert".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @since 1.13
       */
      protected Insert(com.appspot.ruby_mine.rubymine.model.User content) {
        super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.patch".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
     * @return the request
     */
    public Patch patch(java.lang.Long id, com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
      Patch result = new Patch(id, content);
      initialize(result);
      return result;
    }

    public class Patch extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

      private static final String REST_PATH = "user";

      /**
       * Create a request for the method "users.patch".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @since 1.13
       */
      protected Patch(java.lang.Long id, com.appspot.ruby_mine.rubymine.model.User content) {
        super(Rubymine.this, "PATCH", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Patch setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.search".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param name
     * @return the request
     */
    public Search search(java.lang.Long id, java.lang.String name) throws java.io.IOException {
      Search result = new Search(id, name);
      initialize(result);
      return result;
    }

    public class Search extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.UserCol> {

      private static final String REST_PATH = "user/search";

      /**
       * Create a request for the method "users.search".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param name
       * @since 1.13
       */
      protected Search(java.lang.Long id, java.lang.String name) {
        super(Rubymine.this, "GET", REST_PATH, null, com.appspot.ruby_mine.rubymine.model.UserCol.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUserIp(java.lang.String userIp) {
        return (Search) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Long id;

      /**

       */
      public java.lang.Long getId() {
        return id;
      }

      public Search setId(java.lang.Long id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public Search setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "users.update".
     *
     * This request holds the parameters needed by the rubymine server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
     * @return the request
     */
    public Update update(com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
      Update result = new Update(content);
      initialize(result);
      return result;
    }

    public class Update extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

      private static final String REST_PATH = "user";

      /**
       * Create a request for the method "users.update".
       *
       * This request holds the parameters needed by the the rubymine server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @since 1.13
       */
      protected Update(com.appspot.ruby_mine.rubymine.model.User content) {
        super(Rubymine.this, "PUT", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Phone collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Rubymine rubymine = new Rubymine(...);}
     *   {@code Rubymine.Phone.List request = rubymine.phone().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Phone phone() {
      return new Phone();
    }

    /**
     * The "phone" collection of methods.
     */
    public class Phone {

      /**
       * Create a request for the method "phone.insert".
       *
       * This request holds the parameters needed by the rubymine server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @return the request
       */
      public Insert insert(com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
        Insert result = new Insert(content);
        initialize(result);
        return result;
      }

      public class Insert extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

        private static final String REST_PATH = "user/phone/insert";

        /**
         * Create a request for the method "phone.insert".
         *
         * This request holds the parameters needed by the the rubymine server.  After setting any
         * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         * <p> {@link
         * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
         * @since 1.13
         */
        protected Insert(com.appspot.ruby_mine.rubymine.model.User content) {
          super(Rubymine.this, "PUT", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
        }

        @Override
        public Insert setAlt(java.lang.String alt) {
          return (Insert) super.setAlt(alt);
        }

        @Override
        public Insert setFields(java.lang.String fields) {
          return (Insert) super.setFields(fields);
        }

        @Override
        public Insert setKey(java.lang.String key) {
          return (Insert) super.setKey(key);
        }

        @Override
        public Insert setOauthToken(java.lang.String oauthToken) {
          return (Insert) super.setOauthToken(oauthToken);
        }

        @Override
        public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Insert) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Insert setQuotaUser(java.lang.String quotaUser) {
          return (Insert) super.setQuotaUser(quotaUser);
        }

        @Override
        public Insert setUserIp(java.lang.String userIp) {
          return (Insert) super.setUserIp(userIp);
        }

        @Override
        public Insert set(String parameterName, Object value) {
          return (Insert) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "phone.verify".
       *
       * This request holds the parameters needed by the rubymine server.  After setting any optional
       * parameters, call the {@link Verify#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @return the request
       */
      public Verify verify(com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
        Verify result = new Verify(content);
        initialize(result);
        return result;
      }

      public class Verify extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

        private static final String REST_PATH = "user/phone/verify";

        /**
         * Create a request for the method "phone.verify".
         *
         * This request holds the parameters needed by the the rubymine server.  After setting any
         * optional parameters, call the {@link Verify#execute()} method to invoke the remote operation.
         * <p> {@link
         * Verify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
         * @since 1.13
         */
        protected Verify(com.appspot.ruby_mine.rubymine.model.User content) {
          super(Rubymine.this, "PUT", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
        }

        @Override
        public Verify setAlt(java.lang.String alt) {
          return (Verify) super.setAlt(alt);
        }

        @Override
        public Verify setFields(java.lang.String fields) {
          return (Verify) super.setFields(fields);
        }

        @Override
        public Verify setKey(java.lang.String key) {
          return (Verify) super.setKey(key);
        }

        @Override
        public Verify setOauthToken(java.lang.String oauthToken) {
          return (Verify) super.setOauthToken(oauthToken);
        }

        @Override
        public Verify setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Verify) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Verify setQuotaUser(java.lang.String quotaUser) {
          return (Verify) super.setQuotaUser(quotaUser);
        }

        @Override
        public Verify setUserIp(java.lang.String userIp) {
          return (Verify) super.setUserIp(userIp);
        }

        @Override
        public Verify set(String parameterName, Object value) {
          return (Verify) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Start collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Rubymine rubymine = new Rubymine(...);}
     *   {@code Rubymine.Start.List request = rubymine.start().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Start start() {
      return new Start();
    }

    /**
     * The "start" collection of methods.
     */
    public class Start {

      /**
       * Create a request for the method "start.email".
       *
       * This request holds the parameters needed by the rubymine server.  After setting any optional
       * parameters, call the {@link Email#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @return the request
       */
      public Email email(com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
        Email result = new Email(content);
        initialize(result);
        return result;
      }

      public class Email extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

        private static final String REST_PATH = "user/start/email";

        /**
         * Create a request for the method "start.email".
         *
         * This request holds the parameters needed by the the rubymine server.  After setting any
         * optional parameters, call the {@link Email#execute()} method to invoke the remote operation.
         * <p> {@link
         * Email#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
         * @since 1.13
         */
        protected Email(com.appspot.ruby_mine.rubymine.model.User content) {
          super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
        }

        @Override
        public Email setAlt(java.lang.String alt) {
          return (Email) super.setAlt(alt);
        }

        @Override
        public Email setFields(java.lang.String fields) {
          return (Email) super.setFields(fields);
        }

        @Override
        public Email setKey(java.lang.String key) {
          return (Email) super.setKey(key);
        }

        @Override
        public Email setOauthToken(java.lang.String oauthToken) {
          return (Email) super.setOauthToken(oauthToken);
        }

        @Override
        public Email setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Email) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Email setQuotaUser(java.lang.String quotaUser) {
          return (Email) super.setQuotaUser(quotaUser);
        }

        @Override
        public Email setUserIp(java.lang.String userIp) {
          return (Email) super.setUserIp(userIp);
        }

        @Override
        public Email set(String parameterName, Object value) {
          return (Email) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "start.facebook".
       *
       * This request holds the parameters needed by the rubymine server.  After setting any optional
       * parameters, call the {@link Facebook#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @return the request
       */
      public Facebook facebook(com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
        Facebook result = new Facebook(content);
        initialize(result);
        return result;
      }

      public class Facebook extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

        private static final String REST_PATH = "user/start/facebook";

        /**
         * Create a request for the method "start.facebook".
         *
         * This request holds the parameters needed by the the rubymine server.  After setting any
         * optional parameters, call the {@link Facebook#execute()} method to invoke the remote operation.
         * <p> {@link
         * Facebook#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
         * @since 1.13
         */
        protected Facebook(com.appspot.ruby_mine.rubymine.model.User content) {
          super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
        }

        @Override
        public Facebook setAlt(java.lang.String alt) {
          return (Facebook) super.setAlt(alt);
        }

        @Override
        public Facebook setFields(java.lang.String fields) {
          return (Facebook) super.setFields(fields);
        }

        @Override
        public Facebook setKey(java.lang.String key) {
          return (Facebook) super.setKey(key);
        }

        @Override
        public Facebook setOauthToken(java.lang.String oauthToken) {
          return (Facebook) super.setOauthToken(oauthToken);
        }

        @Override
        public Facebook setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Facebook) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Facebook setQuotaUser(java.lang.String quotaUser) {
          return (Facebook) super.setQuotaUser(quotaUser);
        }

        @Override
        public Facebook setUserIp(java.lang.String userIp) {
          return (Facebook) super.setUserIp(userIp);
        }

        @Override
        public Facebook set(String parameterName, Object value) {
          return (Facebook) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "start.kakao".
       *
       * This request holds the parameters needed by the rubymine server.  After setting any optional
       * parameters, call the {@link Kakao#execute()} method to invoke the remote operation.
       *
       * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
       * @return the request
       */
      public Kakao kakao(com.appspot.ruby_mine.rubymine.model.User content) throws java.io.IOException {
        Kakao result = new Kakao(content);
        initialize(result);
        return result;
      }

      public class Kakao extends RubymineRequest<com.appspot.ruby_mine.rubymine.model.User> {

        private static final String REST_PATH = "user/start/kakao";

        /**
         * Create a request for the method "start.kakao".
         *
         * This request holds the parameters needed by the the rubymine server.  After setting any
         * optional parameters, call the {@link Kakao#execute()} method to invoke the remote operation.
         * <p> {@link
         * Kakao#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param content the {@link com.appspot.ruby_mine.rubymine.model.User}
         * @since 1.13
         */
        protected Kakao(com.appspot.ruby_mine.rubymine.model.User content) {
          super(Rubymine.this, "POST", REST_PATH, content, com.appspot.ruby_mine.rubymine.model.User.class);
        }

        @Override
        public Kakao setAlt(java.lang.String alt) {
          return (Kakao) super.setAlt(alt);
        }

        @Override
        public Kakao setFields(java.lang.String fields) {
          return (Kakao) super.setFields(fields);
        }

        @Override
        public Kakao setKey(java.lang.String key) {
          return (Kakao) super.setKey(key);
        }

        @Override
        public Kakao setOauthToken(java.lang.String oauthToken) {
          return (Kakao) super.setOauthToken(oauthToken);
        }

        @Override
        public Kakao setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Kakao) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Kakao setQuotaUser(java.lang.String quotaUser) {
          return (Kakao) super.setQuotaUser(quotaUser);
        }

        @Override
        public Kakao setUserIp(java.lang.String userIp) {
          return (Kakao) super.setUserIp(userIp);
        }

        @Override
        public Kakao set(String parameterName, Object value) {
          return (Kakao) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link Rubymine}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Rubymine}. */
    @Override
    public Rubymine build() {
      return new Rubymine(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link RubymineRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setRubymineRequestInitializer(
        RubymineRequestInitializer rubymineRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(rubymineRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
